{"pageProps":{"note":{"id":"244wzvzc0dha8wknfu73kfz","title":"Annotations System","desc":"","updated":1654371199783,"created":1654362100433,"custom":{},"fname":"stackbit.system-architecture.annotations","type":"note","vault":{"fsPath":"vault"},"contentHash":"1c1a83e7c527cf9dbf28347020f74ea3","links":[],"anchors":{"annotations-tree-extractor":{"type":"header","text":"Annotations Tree Extractor","value":"annotations-tree-extractor","line":9,"column":0,"depth":2},"example":{"type":"header","text":"Example","value":"example","line":62,"column":0,"depth":3},"finddescendantelements":{"type":"header","text":"findDescendantElements","value":"finddescendantelements","line":91,"column":0,"depth":3},"annotation-tree-parser":{"type":"header","text":"Annotation Tree Parser","value":"annotation-tree-parser","line":108,"column":0,"depth":2},"resolveobjectswithannotationtree":{"type":"header","text":"resolveObjectsWithAnnotationTree","value":"resolveobjectswithannotationtree","line":112,"column":0,"depth":3},"parseannotationtree":{"type":"header","text":"parseAnnotationTree","value":"parseannotationtree","line":125,"column":0,"depth":3},"resolvematchtype":{"type":"header","text":"resolveMatchType","value":"resolvematchtype","line":146,"column":0,"depth":3},"resolvelocation":{"type":"header","text":"resolveLocation","value":"resolvelocation","line":155,"column":0,"depth":3},"annotation-utils":{"type":"header","text":"Annotation Utils","value":"annotation-utils","line":164,"column":0,"depth":2},"fieldpathtofielddatapath":{"type":"header","text":"fieldPathToFieldDataPath","value":"fieldpathtofielddatapath","line":166,"column":0,"depth":3},"fieldpathtostring":{"type":"header","text":"fieldPathToString","value":"fieldpathtostring","line":180,"column":0,"depth":3},"appendorarray":{"type":"header","text":"appendOrArray","value":"appendorarray","line":188,"column":0,"depth":3},"annotation-service":{"type":"header","text":"Annotation Service","value":"annotation-service","line":196,"column":0,"depth":2},"logannotationerrors":{"type":"header","text":"logAnnotationErrors","value":"logannotationerrors","line":200,"column":0,"depth":3}},"children":[],"parent":"awkaal4bqtqzhdsc49034rn","data":{}},"body":"<h1 id=\"annotations-system\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#annotations-system\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Annotations System</h1>\n<h2 id=\"annotations-tree-extractor\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#annotations-tree-extractor\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Annotations Tree Extractor</h2>\n<p>Source: <code>@stackbit-app/src/snippet/processors/HtmlProcessor/annotation-tree-extractor.js</code></p>\n<p>The tree extractor is the entry point to the annotations system, and is part of the <code>HtmlProcessor</code> module. Once the DOM is ready, pass the global <code>document</code> object into <code>extractAnnotationTree</code>. The results are then fed into the <code>resolveObjectsWithAnnotationTree</code> method </p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword module\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token maybe-class-name\">Sourcemaps</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span>xpath<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">ElementSourcemap</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token maybe-class-name\">ElementSourcemap</span></span> <span class=\"token punctuation\">{</span>\n  file<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  start<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">ElementPosition</span><span class=\"token punctuation\">;</span>\n  end<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">ElementPosition</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token maybe-class-name\">ElementPosition</span></span> <span class=\"token punctuation\">{</span>\n  line<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  column<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token maybe-class-name\">AnnotationsTree</span></span> <span class=\"token punctuation\">{</span>\n  objectIds<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  children<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">AnnotationsTreeNode</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token maybe-class-name\">AnnotationsTreeNode</span></span> <span class=\"token punctuation\">{</span>\n  oid<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">;</span>\n  fp<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">AnnotationsTreeFieldPath</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  xpath<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  children<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">AnnotationsTreeNode</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token maybe-class-name\">AnnotationsTreeFieldPath</span></span> <span class=\"token punctuation\">{</span>\n  oid<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">;</span>\n  fp<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  loc<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  hasOnlyTextNodes<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token known-class-name class-name\">AnnotationError</span></span> <span class=\"token punctuation\">{</span>\n  message<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  elementXPath<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">extractAnnotationTree</span><span class=\"token punctuation\">(</span><span class=\"token dom variable\">document</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Document</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  sourcemaps<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Sourcemaps</span><span class=\"token punctuation\">;</span>\n  annotationTree<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">AnnotationsTree</span><span class=\"token punctuation\">;</span>\n  errors<span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">AnnotationError</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"example\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#example\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Example</h3>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">objectIds</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'obj1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'obj3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">children</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">oid</span><span class=\"token operator\">:</span> <span class=\"token string\">\"obj1\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">fp</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">xpath</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"/html\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"node\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">children</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">oid</span><span class=\"token operator\">:</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">fp</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">oid</span><span class=\"token operator\">:</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">fp</span><span class=\"token operator\">:</span> <span class=\"token string\">\"author.title\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">loc</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">hasOnlyTextNodes</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">xpath</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"/html\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"node[1]\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"inner[1]\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">oid</span><span class=\"token operator\">:</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">fp</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">oid</span><span class=\"token operator\">:</span> <span class=\"token string\">\"obj3\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">fp</span><span class=\"token operator\">:</span> <span class=\"token string\">\"title\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">loc</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">xpath</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"/html\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"node[1]\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"inner[2]\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3 id=\"finddescendantelements\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#finddescendantelements\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>findDescendantElements</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword module\">export</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token maybe-class-name\">Descendant</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> node<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Element</span><span class=\"token punctuation\">;</span> xpath<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">findDescendantElements</span><span class=\"token punctuation\">(</span>\n  node<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Element</span><span class=\"token punctuation\">,</span>\n  xpath<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">iteratee</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>childNode<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Element</span><span class=\"token punctuation\">,</span> xpath<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">,</span>\n  options<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> recursive<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Descendant</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>Helper function that when given a DOM node and an XPath, return a list of DOM descendants nodes along with their absolute XPath.</p>\n<p>Elements are only added when the given iteratee function returns true.</p>\n<h2 id=\"annotation-tree-parser\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#annotation-tree-parser\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Annotation Tree Parser</h2>\n<p>Test: <code>packages/dev-common/__tests__/annotation-tree-parser.test.js</code></p>\n<h3 id=\"resolveobjectswithannotationtree\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#resolveobjectswithannotationtree\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>resolveObjectsWithAnnotationTree</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">function</span> <span class=\"token function\">resolveObjectsWithAnnotationTree</span><span class=\"token punctuation\">(</span>\n  annotationTree<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">AnnotationsTree</span><span class=\"token punctuation\">,</span>\n  fieldData<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> resolveAllReferences<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">?</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> pathMap<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> objects<span class=\"token punctuation\">;</span> errors<span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">AnnotationError</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>Receive a list of objectIds, and the annotationTree, and resolves the annotations into a pathMap, and returns any additional referenced objects that were used in the annotations. Also returns validation errors to the client.</p>\n<h3 id=\"parseannotationtree\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#parseannotationtree\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>parseAnnotationTree</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">function</span> <span class=\"token function\">parseAnnotationTree</span><span class=\"token punctuation\">(</span>\n  annotationTree<span class=\"token punctuation\">,</span>\n  fieldData<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> parentOid<span class=\"token punctuation\">,</span> parentFp <span class=\"token punctuation\">}</span><span class=\"token operator\">?</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> pathMap<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> pathMapForResolving<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> errors<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>Recursion that goes over annotationTree, and parses out annotations using the fieldData to resolve and infer objectIds and partial fieldPaths (.field).\nSteps:</p>\n<ol>\n<li>parse 'data-sb-object-id' annotations and store context in parentOid to append to child annotations if they don't specify objectId explicitly</li>\n<li>parse 'data-sb-field-path' annotations (using resolveFp to resolve partials (.field), and parent objectIds), and create a pathMap that maps fieldPaths to xPaths.\n2.1. determine if any of the annotations is a container annotation and store it in context to pass to descendants.</li>\n<li>go over child nodes and run the recursion, merging any returned validation errors, and xpath matches.</li>\n</ol>\n<p>Return any resolved annotations as a pathMap,\nalso returns pathMapForResolving, which includes partial fieldPaths for resolving references from any ancestor objectId.</p>\n<h3 id=\"resolvematchtype\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#resolvematchtype\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>resolveMatchType</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">function</span> <span class=\"token function\">resolveMatchType</span><span class=\"token punctuation\">(</span><span class=\"token dom variable\">location</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n</code></pre>\n<p>receives the xpath location, and resolves the matchType for highlighting (text, element, attribute)</p>\n<h3 id=\"resolvelocation\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#resolvelocation\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>resolveLocation</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">function</span> <span class=\"token function\">resolveLocation</span><span class=\"token punctuation\">(</span>annotationFp<span class=\"token punctuation\">,</span> field<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>parses the xpath location partial of an annotation ('objectId:field.path#location') and resolves defaults and fallbacks to return the final xpath.</p>\n<h2 id=\"annotation-utils\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#annotation-utils\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Annotation Utils</h2>\n<h3 id=\"fieldpathtofielddatapath\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#fieldpathtofielddatapath\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>fieldPathToFieldDataPath</h3>\n<p>This method translates fieldPath (object.sections[0].title) to fieldDataPath (object.fields.sections.items[0].fields.title) It follows references, and returns both the fieldDataPath from the nearest object that has an ID, but also the fieldDataPath from the original passed object</p>\n<p>FieldDataPathsFromRoot contains fieldPaths to current fieldPathStr from every object in the reference chain. example: Oid1.fields.sections.items.1.fields.features.items.0.fields.featureTitle Oid2.fields.features.items.0.fields.featureTitle Oid3.fields.featureTitle all three fieldpaths are required to resolve every object in the reference chain</p>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">fieldPathToFieldDataPath</span><span class=\"token punctuation\">(</span>\n  objectId<span class=\"token punctuation\">,</span>\n  fieldPathStr<span class=\"token punctuation\">,</span>\n  fieldData\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> fieldDataPathsFromRoot<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> fieldDataPath<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"fieldpathtostring\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#fieldpathtostring\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>fieldPathToString</h3>\n<p>This converts a fieldPath array to a string, it puts complex strings inside single quotes '', and uses square brackets [] for number keys.</p>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">fieldPathToString</span><span class=\"token punctuation\">(</span>fieldPath<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"appendorarray\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#appendorarray\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>appendOrArray</h3>\n<p>Append item to an array in object given a path, or initialize if it doesn't exist.</p>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">appendOrArray</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2 id=\"annotation-service\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#annotation-service\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Annotation Service</h2>\n<p>Source: <code>@stackbit/stackbit-dev/packages/stackbit-dev/src/services/annotation-errors.ts</code></p>\n<h3 id=\"logannotationerrors\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#logannotationerrors\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>logAnnotationErrors</h3>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword module\">export</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token known-class-name class-name\">AnnotationError</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  message<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    elementXPath<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token maybe-class-name\">SourceMap</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  file<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    start<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> line<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">logAnnotationErrors</span><span class=\"token punctuation\">(</span>\n  errors<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  logger<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span>\n  baseDir<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n  sourcemaps<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>p<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> <span class=\"token keyword nil\">undefined</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">Promise</span><span class=\"token operator\">&#x3C;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>Serialize a list of <code>AnnotationError</code> objects and send to the provided logger.</p>","noteIndex":{"id":"tjo6ofe6jnmhoiu439b1w5m","title":"Root","desc":"","updated":1653388098050,"created":1653388098050,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"751db27904810511db8b169b37266ad0","links":[],"anchors":{"welcome-to-dendron":{"type":"header","text":"Welcome to Dendron","value":"welcome-to-dendron","line":7,"column":0,"depth":1},"lookup":{"type":"header","text":"Lookup","value":"lookup","line":11,"column":0,"depth":2}},"children":["rh9hcb7wtoodm4zbkdng8wd","fhngva5d1pz4yxj3fvhqdmm","zo0dkyv7938yq1gcx8uuziy"],"parent":null,"data":{},"body":"# Welcome to Dendron\n\nThis is the root of your dendron vault. If you decide to publish your entire vault, this will be your landing page. You are free to customize any part of this page except the frontmatter on top.\n\n## Lookup\n\nThis section contains useful links to related resources.\n\n- [Getting Started Guide](https://link.dendron.so/6b25)\n- [Discord](https://link.dendron.so/6b23)\n- [Home Page](https://wiki.dendron.so/)\n- [Github](https://link.dendron.so/6b24)\n- [Developer Docs](https://docs.dendron.so/)\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{}},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":false,"templateHierarchy":"template"},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"siteUrl":"https://drkstr101.github.io/dendron","enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"drkstr101","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enablePrettyLinks":true,"duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}